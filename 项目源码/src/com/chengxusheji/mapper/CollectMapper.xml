<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.CollectMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加笔记收藏记录 -->
	<insert id="addCollect" parameterType="collect">
		insert into t_collect(noteObj,userObj,collectTime) values 
		(#{noteObj.noteId},#{userObj.user_name},#{collectTime})
	</insert>

	<!-- 按照查询条件分页查询笔记收藏记录 -->
	<select id="queryCollect" resultMap="collectMap" >
		select t_collect.* from t_collect,t_note,t_userInfo ${where} and t_collect.noteObj = t_note.noteId and t_collect.userObj = t_userInfo.user_name limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="collectMap" type="collect">
        <id property="collectId" column="collectId" />
        <association property="noteObj" column="noteObj" select="com.chengxusheji.mapper.NoteMapper.getNote" />
        <association property="userObj" column="userObj" select="com.chengxusheji.mapper.UserInfoMapper.getUserInfo" />
    </resultMap>

    <!-- 按照查询条件查询所有笔记收藏记录 -->
	<select id="queryCollectList" resultMap="collectMap" >
		select t_collect.* from t_collect,t_note,t_userInfo ${where} and t_collect.noteObj = t_note.noteId and t_collect.userObj = t_userInfo.user_name
	</select>

    <!-- 按照查询条件的笔记收藏记录数 -->
	<select id="queryCollectCount" resultType="int">
		select count(*) from t_collect,t_note,t_userInfo ${where} and t_collect.noteObj = t_note.noteId and t_collect.userObj = t_userInfo.user_name
	</select>

	<!-- 根据主键查询某个笔记收藏记录 -->
	<select id="getCollect" parameterType="int" resultMap="collectMap">
		select * from t_collect where t_collect.collectId = #{collectId}
	</select>

	<!-- 更新笔记收藏记录 -->
	<update id="updateCollect" parameterType="collect">
		update t_collect set noteObj=#{noteObj.noteId},userObj=#{userObj.user_name},collectTime=#{collectTime} where collectId = #{collectId}
	</update>

	<!-- 删除笔记收藏记录 -->
	<delete id="deleteCollect" parameterType="int">
		delete from t_collect where collectId=#{collectId}
	</delete>

</mapper>
